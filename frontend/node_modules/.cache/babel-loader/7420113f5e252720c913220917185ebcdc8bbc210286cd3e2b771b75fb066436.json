{"ast":null,"code":"var _jsxFileName = \"E:\\\\safepass_full_project\\\\frontend\\\\src\\\\components\\\\PasswordChecker.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getStrength = password => {\n  let score = 0;\n  if (password.length > 8) score++;\n  if (/[A-Z]/.test(password)) score++;\n  if (/[a-z]/.test(password)) score++;\n  if (/\\d/.test(password)) score++;\n  if (/[@$!%*?&]/.test(password)) score++;\n  return score;\n};\nconst PasswordChecker = () => {\n  _s();\n  const [password, setPassword] = useState('');\n  const [strength, setStrength] = useState(0);\n  const [breachCount, setBreachCount] = useState(null);\n  const checkPassword = async pwd => {\n    setPassword(pwd);\n    setStrength(getStrength(pwd));\n    const res = await fetch('http://localhost:5000/api/check', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        password: pwd\n      })\n    });\n    const data = await res.json();\n    setBreachCount(data.count);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      className: \"w-full p-2 border border-gray-300 rounded mb-2\",\n      placeholder: \"Enter password\",\n      onChange: e => checkPassword(e.target.value),\n      value: password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full bg-gray-200 h-3 rounded mb-2\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `h-3 rounded ${strength >= 4 ? 'bg-green-500' : strength >= 2 ? 'bg-yellow-500' : 'bg-red-500'}`,\n        style: {\n          width: `${strength * 20}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), breachCount !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-sm text-gray-700\",\n      children: breachCount > 0 ? `⚠️ Found in ${breachCount} breaches!` : '✅ This password has not been seen in breaches.'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(PasswordChecker, \"mIeC2mMxtDxuC9vHUCLQXLZaFAc=\");\n_c = PasswordChecker;\nexport default PasswordChecker;\nvar _c;\n$RefreshReg$(_c, \"PasswordChecker\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","getStrength","password","score","length","test","PasswordChecker","_s","setPassword","strength","setStrength","breachCount","setBreachCount","checkPassword","pwd","res","fetch","method","headers","body","JSON","stringify","data","json","count","className","children","type","placeholder","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","style","width","_c","$RefreshReg$"],"sources":["E:/safepass_full_project/frontend/src/components/PasswordChecker.js"],"sourcesContent":["\nimport React, { useState } from 'react';\n\nconst getStrength = (password) => {\n  let score = 0;\n  if (password.length > 8) score++;\n  if (/[A-Z]/.test(password)) score++;\n  if (/[a-z]/.test(password)) score++;\n  if (/\\d/.test(password)) score++;\n  if (/[@$!%*?&]/.test(password)) score++;\n  return score;\n};\n\nconst PasswordChecker = () => {\n  const [password, setPassword] = useState('');\n  const [strength, setStrength] = useState(0);\n  const [breachCount, setBreachCount] = useState(null);\n\n  const checkPassword = async (pwd) => {\n    setPassword(pwd);\n    setStrength(getStrength(pwd));\n    const res = await fetch('http://localhost:5000/api/check', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ password: pwd })\n    });\n    const data = await res.json();\n    setBreachCount(data.count);\n  };\n\n  return (\n    <div className=\"mb-4\">\n      <input\n        type=\"password\"\n        className=\"w-full p-2 border border-gray-300 rounded mb-2\"\n        placeholder=\"Enter password\"\n        onChange={(e) => checkPassword(e.target.value)}\n        value={password}\n      />\n      <div className=\"w-full bg-gray-200 h-3 rounded mb-2\">\n        <div\n          className={`h-3 rounded ${strength >= 4 ? 'bg-green-500' : strength >= 2 ? 'bg-yellow-500' : 'bg-red-500'}`}\n          style={{ width: `${strength * 20}%` }}\n        ></div>\n      </div>\n      {breachCount !== null && (\n        <p className=\"text-sm text-gray-700\">\n          {breachCount > 0\n            ? `⚠️ Found in ${breachCount} breaches!`\n            : '✅ This password has not been seen in breaches.'}\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default PasswordChecker;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}